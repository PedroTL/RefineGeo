% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_best_coords.R
\name{get_best_coords}
\alias{get_best_coords}
\title{Calculate Distance between Coordinates, Determine Shortest Distance Origin and Calculates MDC (Method of Double Confirmation)}
\usage{
get_best_coords(
  df,
  lat_col1,
  lon_col1,
  lat_col2,
  lon_col2,
  lat_col3,
  lon_col3,
  dist_prefix,
  short_distance = FALSE,
  mdc = FALSE,
  summarize_mdc = FALSE,
  cep_confirmation = FALSE,
  input_addr = NULL,
  output_addr_1 = NULL,
  output_addr_2 = NULL,
  output_addr_3 = NULL,
  subsector_as_zip = FALSE,
  cep_comparison = FALSE,
  strict_check = FALSE
)
}
\arguments{
\item{df}{A dataframe containing latitude, longitude and address columns.}

\item{lat_col1, lon_col1, lat_col2, lon_col2, lat_col3, lon_col3}{Column name for each latidude and longitude provided by the three Geocoding services.}

\item{dist_prefix}{Prefix for the new distance columns.}

\item{short_distance}{Logical value. If \code{TRUE}, determines the shortest distance source and adds a corresponding column indicating from which services the shortest distances are obtained. Default is FALSE.}

\item{mdc}{Logical value. If \code{TRUE}, computes the Method of Double Confirmation (MDC). Adds three columns, each corresponding to a specific Geocoding service. The MDC attributes a 'scores points' based on the shortest distance column to the two services that provided the closest coordinates. If only one coordinate is available, no points are attributed. Default is \code{FALSE}.}

\item{summarize_mdc}{Logical value. If \code{TRUE}, computes a new data frame, summarizing the count of the MDC for each of the three services, enabling to rank them.}

\item{cep_confirmation}{Logical Value. If \code{TRUE}, the columns with the \code{input_addr}, \code{output_addr_1}, \code{output_addr_2}, \code{output_addr_3} must be provided. Uses the \code{extr_cep} function to extract CEP from the four provided addresses. The \code{subsector_as_zip} can be set to \code{TRUE} if 5 digits CEPs must be considered. Default is \code{FALSE}}

\item{input_addr}{Column with the complete description of address used in the geocoding process.}

\item{output_addr_1, output_addr_2, output_addr_3}{Column with the complete returned address description for each of the three Geocoding services.}

\item{subsector_as_zip}{Logical. If \code{TRUE}, can extracts a 5-digit subsector pattern as ZIP code when available. Default is \code{FALSE}.}

\item{cep_comparison}{Logical Value. If \code{TRUE}, the columns with the \code{input_addr}, \code{output_addr_1}, \code{output_addr_2}, \code{output_addr_3} must be provided, it also demands that \code{cep_confirmation = TRUE}. Uses the compare_cep to compare the CEP from the input_addr with the three outputs CEPs. The \code{strict_check} can be set to \code{TRUE} to evaluate the five digits CEPs, if \code{subsector_as_zip = TRUE} is recommended that \code{strict_check = TRUE.} Default is \code{FALSE}.}

\item{strict_check}{Logical indicating whether to perform strict checking on 5-digit ZIP codes. If \code{TRUE}, evaluates 5-digit codes; if \code{FALSE}, evaluates only 8-digit codes. Default is \code{FALSE}.}
}
\value{
An object of the same type as \code{.data}. The output has the fallowing proprieties:
\itemize{
\item Added distances columns between the pairwise comparison of three Geocoding services.
\item If specified by \code{short_distance = TRUE} adds a column with the name of the shortest distance between Geocoding services.
\item If specified by \code{cep_confirmation} adds four columns, assigning the respectively CEP contained in the \code{input_addr}, \code{output_addr_1}, \code{output_addr_2}, \code{output_addr_3}.
\item If specified by \code{cep_comparison} adds three columns, comparing if the CEP found in the \code{input_addr} is the same as the ones found in the \code{output_addr_1}, \code{output_addr_2}, \code{output_addr_3}.
\item If specified by \code{mdc = TRUE} adds three columns, assigning one 'score point' for each Geocoding service when they confirmed each other by means of the coordinate being the shortest between the three.
\item If specified by \code{summarize_mdc} returns a list whit the original data frame whit the appended columns and a summarized mdc counting each confirmation point by the \code{mdc} for each of the three Geocoding services.
}
}
\description{
Calculates distances between latitude and longitude pairs, creating corresponding distance columns.
Adds a column identifying the shortest distance source if specified.
}
\details{
This function computes distances between latitude and longitude pairs, generating new columns in the dataframe for each pairwise distance based on the given \code{dist_prefix}, indicating the source of the shortest distance obtained from Geocoding services.
Distances are calculated using the Haversine formula, resulting in kilometers.
The function creates three distance columns: \cr
\itemize{
\item \code{dist_prefix_1_2}: Distance between \code{lat_col1} and \code{lon_col1} with \code{lat_col2} and \code{lon_col2}. \cr
\item \code{dist_prefix_1_3}: Distance between \code{lat_col1} and \code{lon_col1} with \code{lat_col3} and \code{lon_col3}. \cr
\item \code{dist_prefix_2_3}: Distance between \code{lat_col2} and \code{lon_col2} with \code{lat_col3} and \code{lon_col3}. \cr
\cr
\item If \code{short_distance = TRUE}, a new column is appended to the dataframe, identifying the origin of the shortest distance from Geocoding services. \cr
\item The \code{mdc = TRUE} option is available only if \code{short_distance = TRUE}. It computes the Method of Double Confirmation, adding three new columns, each representing a Geocoding service. Points are attributed based on the closest coordinates confirmed through the shortest distance column. This feature can be used to rank the quality of Geocoding services. \cr
\item The \code{summarize_mdc = TRUE} options is available only if \code{mdc = TRUE}. It computes a new data frame, summarizing the count of points for each geocoding service. This enables the services to be ranked. \cr
\item The \code{cep_confirmation = TRUE} works with 4 addresses columns, one being the input given to the geocoding services and three outputs addresses. Under the hood, it uses the \code{extr_cep} to extract CEP from the four string, argument \code{subsector_as_zip = TRUE} allows five digits CEPs to be considered. \cr
\item The \code{cep_comparison = TRUE} works when \code{cep_confirmation = TRUE} and all the 4 addresses columns are provided. Under the hood uses the \code{compare_cep} to check if the CEP found in the input address is the same as the CEPs found in the three outputs addresses. The \code{strict_check = TRUE} evaluate CEPs whit five digits in the equality. It is recommended that if \code{subsector_as_zip = TRUE}, \code{strict_check = TRUE} as well. \cr
\item All new columns are appended to the input data frame. \cr
}

\cr
For more details about the Method of Double Confirmation (MDC), visit: https://feac.org.br/wp-content/uploads/2023/10/Geocodificacao_FEAC.pdf?portfolioCats=3105#new_tab \cr
\cr
}
\examples{
library(geosphere)
library(dplyr)
library(stringr)
library(stringi)
library(magrittr)

df <- data.frame(
  input_address = c("Addr_1", "Addr_1", "Addr_1", "Addr_1", "Addr_1", "Addr_1", "Addr_1"),
  lat1 = c(-22.71704, -22.71258, -22.77704, -22.74704, NA, NA, NA),
  lon1 = c(-46.91200, -46.90435, -46.97200, -46.91200, NA, NA, NA),
  lat2 = c(-22.72704, -22.71268, -22.72304, NA, -22.72704, NA, NA),
  lon2 = c(-46.93200, -46.90435, -46.99200, NA, -46.92435, NA, NA),
  lat3 = c(-22.75704, -22.71258, NA, NA, NA, -22.77704, NA),
  lon3 = c(-46.92430, -46.90435, NA, NA, NA, -46.92439, NA)
)

df_list <- get_best_coords(df, "lat1", "lon1", "lat2", "lon2", "lat3", "lon3",
                          "dis", short_distance = TRUE, mdc = TRUE, summarize_mdc = TRUE)

original_df <- df_list$df
print(original_df)

mdc_summary <- df_list$mdc_summary
print(mdc_summary)

}
\seealso{
\code{\link[=clean_address]{clean_address()}} for convenient address cleaning
\code{\link[=extr_cep]{extr_cep()}} for convenient CEP pattern extraction
\code{\link[=compare_cep]{compare_cep()}} for convenient CEP patter comparison
\code{\link[geosphere:distHaversine]{geosphere::distHaversine()}} for calculating distances
}
